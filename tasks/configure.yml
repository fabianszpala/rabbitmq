---

- name: Create the ssl folder for rabbitmq
  become: yes
  file:
    path: /etc/rabbitmq/ssl/
    owner: rabbitmq
    group: rabbitmq
    mode: 0750
    state: directory
  when: rabbitmq.ssl.enabled

- name: Copy the ssl certificates
  become: yes
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: rabbitmq
    group: rabbitmq
    mode: 0640
    backup: yes
  with_items:
    - src: "{{ rabbitmq.ssl.ca_cert }}"
      dest: "{{ rabbitmq.conf.ssl.options.cacertfile }}"
    - src: "{{ rabbitmq.ssl.server_key }}"
      dest: "{{ rabbitmq.conf.ssl.options.keyfile }}"
    - src: "{{ rabbitmq.ssl.server_cert }}"
      dest: "{{ rabbitmq.conf.ssl.options.certfile }}"
  when: rabbitmq.ssl.enabled

- name: Generate the configuration of rabbitmq
  become: yes
  template:
    src: rabbitmq.config.j2
    dest: /etc/rabbitmq/rabbitmq.config
    owner: rabbitmq
    group: rabbitmq
    mode: 0644
    backup: yes
  notify: restart rabbitmq-server

- name: Generate environment-specific configuration
  become: yes
  template:
    src: rabbitmq-env.conf.j2
    dest: /etc/rabbitmq/rabbitmq-env.conf
    owner: rabbitmq
    group: rabbitmq
    mode: 0644
    backup: yes
  notify: restart rabbitmq-server
  when: rabbitmq.conf.env | length > 1

- name: Enable plugins
  become: yes
  rabbitmq_plugin:
    names: "{{ rabbitmq.plugins | join(',') }}"
    new_only: "{{ rabbitmq.new_only }}"
  notify: restart rabbitmq-server
  when: rabbitmq.plugins | length > 0

- name: Get the list of active plugins to disable
  become: yes
  command: rabbitmq-plugins list -e -m
  register: result
  when: rabbitmq.plugins | length == 0

- name: Disable plugins if none added in the configuration
  become: yes
  rabbitmq_plugin:
    name: "{{ item }}"
    state: disabled
  with_items: "{{ result.stdout_lines | default([ ]) }}"
  when: rabbitmq.plugins | length == 0
  notify: restart rabbitmq-server

- name: Ensure rabbitmq is running
  become: yes
  service:
    name: rabbitmq-server
    state: started

- name: Add rabbitmq vhost
  become: yes
  rabbitmq_vhost:
    name: "{{ item.name }}"
    node: "{{ item.node | default('rabbit') }}"
    tracing: "{{ item.tracing | default('no') }}"
    state: present
  with_items: rabbitmq.vhost_definitions

- name: Add rabbitmq user and set privileges
  become: yes
  rabbitmq_user:
    user: "{{ item.user }}"
    password: "{{ item.password }}"
    vhost: "{{ item.vhost | default('/', false) }}"
    node: "{{ item.node | default('rabbit') }}"
    tags: "{{ (item.tags | default('')) | join(',') }}"
    configure_priv: "{{ item.configure_priv | default('.*') }}"
    read_priv: "{{ item.read_priv | default('.*') }}"
    write_priv: "{{ item.write_priv | default('.*') }}"
    state: present
    force: "{{ item.force|default('yes') }}"
  with_items: rabbitmq.users_definitions

- name: Remove guest user (hostname)
  become: yes
  rabbitmq_user:
    user: guest
    vhost: /
    node: "rabbit@{{ ansible_hostname }}"
    state: absent
  register: rm_guest_hostname
  ignore_errors: true

- name: Remove guest user (default)
  become: yes
  rabbitmq_user:
    user: guest
    vhost: /
    state: absent
  when: rm_guest_hostname|failed
